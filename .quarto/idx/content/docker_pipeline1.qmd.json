{"title":"🐳 Running Pipeline1 with Docker","markdown":{"yaml":{"title":"🐳 Running Pipeline1 with Docker","format":"html","toc":true,"number-sections":true},"headingText":"📦 What Is This?","containsRefs":false,"markdown":"\n\n\n\nThis guide explains how to build and run the `pipeline1` container for the ChIP-seq Modular Analysis Pipeline using Docker. It is beginner-friendly and reproducible.\n\n---\n\n## ✅ Prerequisites\n\nMake sure you have:\n\n- [Docker installed](https://docs.docker.com/get-docker/)\n- A terminal open in the **project root** (`chip-seq-modular-pipeline/`)\n\n---\n\n## 🏗️ Step 1: Build the Docker Image\n\nFrom the **project root**, run:\n\n```bash\ndocker build -f Docker/Dockerfile.pipeline1 -t pipeline1-test .\n````\n\nWhere:\n\n* `-f` tells Docker which file to use\n* `-t pipeline1-test` names the image\n* `.` sets the build context (your entire repo)\n\n> ⏱️ First-time builds may take several minutes.\n\n---\n\n## 📁 Step 2: Folder Structure\n\nTo ensure correct volume mounting inside the container, organize your folders like this:\n\n| Host Folder         | Container Mount              | Description                       |\n| ------------------- | ---------------------------- | --------------------------------- |\n| `samples/`          | `/pipeline/samples`          | Raw sequencing input              |\n| `Reference/`        | `/pipeline/Reference`        | Genome reference files            |\n| `SpikeinReference/` | `/pipeline/SpikeinReference` | Spike-in configs                  |\n| `metadata/`         | `/pipeline/metadata`         | Sample metadata and mapping files |\n| `templates/`        | `/pipeline/templates`        | YAML/TSV configuration templates  |\n| `adapters/`         | `/pipeline/adapters`         | Adapter files for trimming        |\n| `assets/`           | `/pipeline/assets`           | Icons, logos, images, PDFs, etc.  |\n| `modules/`          | `/pipeline/modules`          | Pipeline logic and scripts        |\n| `results/`          | `/pipeline/results`          | Output from pipeline1             |\n| `analysis/`         | `/pipeline/analysis`         | Output passed to pipeline2        |\n\n> 🛠️ Docker will auto-create `results/` and `analysis/` if they don't exist.\n\n---\n\n## ▶️ Step 3: Run the Pipeline (Default)\n\nTo run the default pipeline with standard parameters:\n\n```bash\ndocker run --rm -it \\\n  -v \"$PWD/samples:/pipeline/samples\" \\\n  -v \"$PWD/Reference:/pipeline/Reference\" \\\n  -v \"$PWD/SpikeinReference:/pipeline/SpikeinReference\" \\\n  -v \"$PWD/metadata:/pipeline/metadata\" \\\n  -v \"$PWD/templates:/pipeline/templates\" \\\n  -v \"$PWD/adapters:/pipeline/adapters\" \\\n  -v \"$PWD/assets:/pipeline/assets\" \\\n  -v \"$PWD/modules:/pipeline/modules\" \\\n  -v \"$PWD/results:/pipeline/results\" \\\n  -v \"$PWD/analysis:/pipeline/analysis\" \\\n  pipeline1-test bash run_pipeline1.sh\n```\n\n---\n\n## ⚙️ Step 4: Run with Custom Options\n\nExample with flags for genome, adapter, platform, and threads:\n\n```bash\ndocker run --rm -it \\\n  -v \"$PWD/samples:/pipeline/samples\" \\\n  -v \"$PWD/Reference:/pipeline/Reference\" \\\n  -v \"$PWD/SpikeinReference:/pipeline/SpikeinReference\" \\\n  -v \"$PWD/metadata:/pipeline/metadata\" \\\n  -v \"$PWD/templates:/pipeline/templates\" \\\n  -v \"$PWD/adapters:/pipeline/adapters\" \\\n  -v \"$PWD/assets:/pipeline/assets\" \\\n  -v \"$PWD/modules:/pipeline/modules\" \\\n  -v \"$PWD/results:/pipeline/results\" \\\n  -v \"$PWD/analysis:/pipeline/analysis\" \\\n  pipeline1-test bash run_pipeline1.sh \\\n    -t 8 \\\n    -r mm10 \\\n    -a tn5_nextera \\\n    -p IONTORRENT \\\n    -m metadata/mapping.tsv \\\n    -f csv\n```\n\n---\n\n## 🪛 Troubleshooting & Tips\n\n* ✅ Run Docker **inside** your project folder.\n* ✅ Mount `results/` and `analysis/` to keep output.\n* 🐞 To debug interactively:\n\n```bash\ndocker run --rm -it pipeline1-test\n```\n\nThen inside the container:\n\n```bash\nbash run_pipeline1.sh -t 4 -r hg38\n```\n\n---\n\n## 🎯 Next Steps\n\nOnce `pipeline1` finishes, you can move to `pipeline2` using `analysis/` as input.\n\n---\n\n## 📂 Output Overview\n\n| Folder      | Description                            |\n| ----------- | -------------------------------------- |\n| `results/`  | Output results from pipeline1          |\n| `analysis/` | Used later as input for `pipeline2`    |\n| `logs/`     | (optional) runtime logs if implemented |\n\n---\n\n\n\n\n","srcMarkdownNoYaml":"\n\n\n## 📦 What Is This?\n\nThis guide explains how to build and run the `pipeline1` container for the ChIP-seq Modular Analysis Pipeline using Docker. It is beginner-friendly and reproducible.\n\n---\n\n## ✅ Prerequisites\n\nMake sure you have:\n\n- [Docker installed](https://docs.docker.com/get-docker/)\n- A terminal open in the **project root** (`chip-seq-modular-pipeline/`)\n\n---\n\n## 🏗️ Step 1: Build the Docker Image\n\nFrom the **project root**, run:\n\n```bash\ndocker build -f Docker/Dockerfile.pipeline1 -t pipeline1-test .\n````\n\nWhere:\n\n* `-f` tells Docker which file to use\n* `-t pipeline1-test` names the image\n* `.` sets the build context (your entire repo)\n\n> ⏱️ First-time builds may take several minutes.\n\n---\n\n## 📁 Step 2: Folder Structure\n\nTo ensure correct volume mounting inside the container, organize your folders like this:\n\n| Host Folder         | Container Mount              | Description                       |\n| ------------------- | ---------------------------- | --------------------------------- |\n| `samples/`          | `/pipeline/samples`          | Raw sequencing input              |\n| `Reference/`        | `/pipeline/Reference`        | Genome reference files            |\n| `SpikeinReference/` | `/pipeline/SpikeinReference` | Spike-in configs                  |\n| `metadata/`         | `/pipeline/metadata`         | Sample metadata and mapping files |\n| `templates/`        | `/pipeline/templates`        | YAML/TSV configuration templates  |\n| `adapters/`         | `/pipeline/adapters`         | Adapter files for trimming        |\n| `assets/`           | `/pipeline/assets`           | Icons, logos, images, PDFs, etc.  |\n| `modules/`          | `/pipeline/modules`          | Pipeline logic and scripts        |\n| `results/`          | `/pipeline/results`          | Output from pipeline1             |\n| `analysis/`         | `/pipeline/analysis`         | Output passed to pipeline2        |\n\n> 🛠️ Docker will auto-create `results/` and `analysis/` if they don't exist.\n\n---\n\n## ▶️ Step 3: Run the Pipeline (Default)\n\nTo run the default pipeline with standard parameters:\n\n```bash\ndocker run --rm -it \\\n  -v \"$PWD/samples:/pipeline/samples\" \\\n  -v \"$PWD/Reference:/pipeline/Reference\" \\\n  -v \"$PWD/SpikeinReference:/pipeline/SpikeinReference\" \\\n  -v \"$PWD/metadata:/pipeline/metadata\" \\\n  -v \"$PWD/templates:/pipeline/templates\" \\\n  -v \"$PWD/adapters:/pipeline/adapters\" \\\n  -v \"$PWD/assets:/pipeline/assets\" \\\n  -v \"$PWD/modules:/pipeline/modules\" \\\n  -v \"$PWD/results:/pipeline/results\" \\\n  -v \"$PWD/analysis:/pipeline/analysis\" \\\n  pipeline1-test bash run_pipeline1.sh\n```\n\n---\n\n## ⚙️ Step 4: Run with Custom Options\n\nExample with flags for genome, adapter, platform, and threads:\n\n```bash\ndocker run --rm -it \\\n  -v \"$PWD/samples:/pipeline/samples\" \\\n  -v \"$PWD/Reference:/pipeline/Reference\" \\\n  -v \"$PWD/SpikeinReference:/pipeline/SpikeinReference\" \\\n  -v \"$PWD/metadata:/pipeline/metadata\" \\\n  -v \"$PWD/templates:/pipeline/templates\" \\\n  -v \"$PWD/adapters:/pipeline/adapters\" \\\n  -v \"$PWD/assets:/pipeline/assets\" \\\n  -v \"$PWD/modules:/pipeline/modules\" \\\n  -v \"$PWD/results:/pipeline/results\" \\\n  -v \"$PWD/analysis:/pipeline/analysis\" \\\n  pipeline1-test bash run_pipeline1.sh \\\n    -t 8 \\\n    -r mm10 \\\n    -a tn5_nextera \\\n    -p IONTORRENT \\\n    -m metadata/mapping.tsv \\\n    -f csv\n```\n\n---\n\n## 🪛 Troubleshooting & Tips\n\n* ✅ Run Docker **inside** your project folder.\n* ✅ Mount `results/` and `analysis/` to keep output.\n* 🐞 To debug interactively:\n\n```bash\ndocker run --rm -it pipeline1-test\n```\n\nThen inside the container:\n\n```bash\nbash run_pipeline1.sh -t 4 -r hg38\n```\n\n---\n\n## 🎯 Next Steps\n\nOnce `pipeline1` finishes, you can move to `pipeline2` using `analysis/` as input.\n\n---\n\n## 📂 Output Overview\n\n| Folder      | Description                            |\n| ----------- | -------------------------------------- |\n| `results/`  | Output results from pipeline1          |\n| `analysis/` | Used later as input for `pipeline2`    |\n| `logs/`     | (optional) runtime logs if implemented |\n\n---\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":true,"css":["../styles.css"],"output-file":"docker_pipeline1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":"cerulean","title":"🐳 Running Pipeline1 with Docker"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}