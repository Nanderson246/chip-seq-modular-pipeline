{"title":"Preprocessing Modules","markdown":{"yaml":{"title":"Preprocessing Modules"},"headingText":"üó∫Ô∏è Creating the `mapping.tsv` File (Metadata Table)","containsRefs":false,"markdown":"\n\n\nThe metadata file is crucial for automating sample grouping, identifying replicates, and selecting the appropriate peak caller.\n\n> üß† **Filename required:** `metadata/mapping.tsv`\n\n### ‚úÖ Required Columns\n\n+---------------+---------------------------------------+-------------------+\n| Column        | Description                           | Example           |\n+===============+=======================================+===================+\n| `Sample_ID`   | Unique ID matching FASTQ or BAM files | `SRR123456`       |\n+---------------+---------------------------------------+-------------------+\n| `Instrument`  | Sequencing instrument or platform     | `Illumina`        |\n+---------------+---------------------------------------+-------------------+\n| `Sample_Type` | `ChIP`, `Input`, `IgG`, `Mock`, etc.  | `ChIP`            |\n+---------------+---------------------------------------+-------------------+\n| `Condition`   | Experimental condition or group       | `Treated`, `WT`   |\n+---------------+---------------------------------------+-------------------+\n| `Replicate`   | Replicate number (`1`, `2`, `3`, ...) | `1`               |\n+---------------+---------------------------------------+-------------------+\n| `Target`      | Transcription factor or histone mark  | `H3K27ac`, `CTCF` |\n+---------------+---------------------------------------+-------------------+\n\n### üìù Optional Columns\n\n| Column       | Description                               | Example  |\n|--------------|-------------------------------------------|----------|\n| `Cell_line`  | Cell line used                            | `HEK293` |\n| `Spike_Type` | If spike-in is used (e.g., `dm6`, `ERCC`) | `dm6`    |\n\n### üìÅ Example Structure\n\n``` tsv\nSample_ID   Instrument  Sample_Type Condition   Replicate   Target  Cell_line   Spike_Type\nSRR001      Illumina    ChIP        WT          1         CTCF       HEK293     dm6\nSRR002      Illumina    ChIP        WT          2         CTCF       HEK293     dm6\nSRR003      Illumina    Input       WT          1         None       HEK293     dm6\nSRR004      Illumina    ChIP        KO          1         H3K27me3   HEK293     dm6\nSRR005      Illumina    ChIP        KO          2         H3K27me3   HEK293     dm6\nSRR006      Illumina    Input       KO          1         None       HEK293     dm6\n```\n\n------------------------------------------------------------------------\n\n### üß™ Validation Steps\n\nMake sure your file is valid before starting the pipeline:\n\n1.  **Validate schema:**\n\n``` bash\nbash modules/utils/validate_mapping_yaml.sh templates/mapping_schema.yaml\n```\n\n2.  **Validate metadata:**\n\n``` bash\npython3 modules/utils/validate_mapping.py \\\n  --mapping metadata/mapping.tsv \\\n  --schema templates/mapping_schema.yaml\n```\n\n‚úîÔ∏è You should see ‚ÄúValidation Passed‚Äù if everything is correct.\n\n## üìã What is `mapping.tsv` and Why Is It Important?\n\n### üîç What is it?\n\nThe `mapping.tsv` is a **metadata table**‚Äîa plain text file in tab-separated format‚Äîthat contains structured information about each sample in your ChIP-seq experiment. Each row represents a sequencing sample, and each column provides key attributes (e.g., sample ID, condition, replicate number, target protein, etc.).\n\nThis file needs to be stored at:\n\n```         \nmetadata/mapping.tsv\n```\n\nThis mapping table will be transformed during the pipeline process: at then you will have a backup (mapping.tsv.bak), mapping_filtered.tsv (produce after replicates QC), and mapping_scaled.tsv (produced after bam cleaning, it contains the ratio of exogenous spike , if spike was detected, and the spike genome type).\n\n### üß† Why is it needed?\n\nThis file is **critical** for enabling your pipeline to:\n\n‚úÖ **Recognize and organize samples** automatically ‚úÖ **Group replicates** (for IDR and reproducibility checks) ‚úÖ **Assign controls** (Input, IgG, Mock) correctly for peak calling ‚úÖ **Select peak caller styles** (e.g., narrowPeak for TFs, broadPeak for histone marks) ‚úÖ **Validate input consistency** using the YAML schema\n\nWithout this file, the pipeline wouldn‚Äôt know how your samples relate to each other‚Äîor how to process them correctly.\n\n### üîó How does the pipeline use it?\n\n-   **Pipeline 1:** The script `11_Renaming_bam.sh` uses the metadata to automatically rename BAM files and organize them into logical groups.\n\n-   **Pipeline 2:** Several scripts (e.g., `01_replicate_qc.sh`, `03_1_MACS3_peak_calling.sh`) read `mapping.tsv` to apply the right rules for:\n\n    -   Sample pairing (ChIP vs. Input)\n    -   Replicate merging\n    -   Peak calling type\n    -   Reproducibility evaluation (IDR)\n\n-   **Validation scripts** (`validate_mapping.py`, `validate_mapping_yaml.sh`) ensure the file is complete and follows strict format rules before any analysis starts.\n\n### üß¨ Summary\n\n+-------------------------+------------------------------------------------------------+\n| Feature                 | Why it matters                                             |\n+=========================+============================================================+\n| **Automation**          | Removes manual handling of sample groups                   |\n+-------------------------+------------------------------------------------------------+\n| **Reproducibility**     | Ensures the same logic applies every time                  |\n+-------------------------+------------------------------------------------------------+\n| **Compatibility**       | Lets the pipeline work across diverse experimental designs |\n+-------------------------+------------------------------------------------------------+\n| **Quality control**     | Prevents broken analyses due to misannotated samples       |\n+-------------------------+------------------------------------------------------------+\n\n------------------------------------------------------------------------\n","srcMarkdownNoYaml":"\n\n## üó∫Ô∏è Creating the `mapping.tsv` File (Metadata Table)\n\nThe metadata file is crucial for automating sample grouping, identifying replicates, and selecting the appropriate peak caller.\n\n> üß† **Filename required:** `metadata/mapping.tsv`\n\n### ‚úÖ Required Columns\n\n+---------------+---------------------------------------+-------------------+\n| Column        | Description                           | Example           |\n+===============+=======================================+===================+\n| `Sample_ID`   | Unique ID matching FASTQ or BAM files | `SRR123456`       |\n+---------------+---------------------------------------+-------------------+\n| `Instrument`  | Sequencing instrument or platform     | `Illumina`        |\n+---------------+---------------------------------------+-------------------+\n| `Sample_Type` | `ChIP`, `Input`, `IgG`, `Mock`, etc.  | `ChIP`            |\n+---------------+---------------------------------------+-------------------+\n| `Condition`   | Experimental condition or group       | `Treated`, `WT`   |\n+---------------+---------------------------------------+-------------------+\n| `Replicate`   | Replicate number (`1`, `2`, `3`, ...) | `1`               |\n+---------------+---------------------------------------+-------------------+\n| `Target`      | Transcription factor or histone mark  | `H3K27ac`, `CTCF` |\n+---------------+---------------------------------------+-------------------+\n\n### üìù Optional Columns\n\n| Column       | Description                               | Example  |\n|--------------|-------------------------------------------|----------|\n| `Cell_line`  | Cell line used                            | `HEK293` |\n| `Spike_Type` | If spike-in is used (e.g., `dm6`, `ERCC`) | `dm6`    |\n\n### üìÅ Example Structure\n\n``` tsv\nSample_ID   Instrument  Sample_Type Condition   Replicate   Target  Cell_line   Spike_Type\nSRR001      Illumina    ChIP        WT          1         CTCF       HEK293     dm6\nSRR002      Illumina    ChIP        WT          2         CTCF       HEK293     dm6\nSRR003      Illumina    Input       WT          1         None       HEK293     dm6\nSRR004      Illumina    ChIP        KO          1         H3K27me3   HEK293     dm6\nSRR005      Illumina    ChIP        KO          2         H3K27me3   HEK293     dm6\nSRR006      Illumina    Input       KO          1         None       HEK293     dm6\n```\n\n------------------------------------------------------------------------\n\n### üß™ Validation Steps\n\nMake sure your file is valid before starting the pipeline:\n\n1.  **Validate schema:**\n\n``` bash\nbash modules/utils/validate_mapping_yaml.sh templates/mapping_schema.yaml\n```\n\n2.  **Validate metadata:**\n\n``` bash\npython3 modules/utils/validate_mapping.py \\\n  --mapping metadata/mapping.tsv \\\n  --schema templates/mapping_schema.yaml\n```\n\n‚úîÔ∏è You should see ‚ÄúValidation Passed‚Äù if everything is correct.\n\n## üìã What is `mapping.tsv` and Why Is It Important?\n\n### üîç What is it?\n\nThe `mapping.tsv` is a **metadata table**‚Äîa plain text file in tab-separated format‚Äîthat contains structured information about each sample in your ChIP-seq experiment. Each row represents a sequencing sample, and each column provides key attributes (e.g., sample ID, condition, replicate number, target protein, etc.).\n\nThis file needs to be stored at:\n\n```         \nmetadata/mapping.tsv\n```\n\nThis mapping table will be transformed during the pipeline process: at then you will have a backup (mapping.tsv.bak), mapping_filtered.tsv (produce after replicates QC), and mapping_scaled.tsv (produced after bam cleaning, it contains the ratio of exogenous spike , if spike was detected, and the spike genome type).\n\n### üß† Why is it needed?\n\nThis file is **critical** for enabling your pipeline to:\n\n‚úÖ **Recognize and organize samples** automatically ‚úÖ **Group replicates** (for IDR and reproducibility checks) ‚úÖ **Assign controls** (Input, IgG, Mock) correctly for peak calling ‚úÖ **Select peak caller styles** (e.g., narrowPeak for TFs, broadPeak for histone marks) ‚úÖ **Validate input consistency** using the YAML schema\n\nWithout this file, the pipeline wouldn‚Äôt know how your samples relate to each other‚Äîor how to process them correctly.\n\n### üîó How does the pipeline use it?\n\n-   **Pipeline 1:** The script `11_Renaming_bam.sh` uses the metadata to automatically rename BAM files and organize them into logical groups.\n\n-   **Pipeline 2:** Several scripts (e.g., `01_replicate_qc.sh`, `03_1_MACS3_peak_calling.sh`) read `mapping.tsv` to apply the right rules for:\n\n    -   Sample pairing (ChIP vs. Input)\n    -   Replicate merging\n    -   Peak calling type\n    -   Reproducibility evaluation (IDR)\n\n-   **Validation scripts** (`validate_mapping.py`, `validate_mapping_yaml.sh`) ensure the file is complete and follows strict format rules before any analysis starts.\n\n### üß¨ Summary\n\n+-------------------------+------------------------------------------------------------+\n| Feature                 | Why it matters                                             |\n+=========================+============================================================+\n| **Automation**          | Removes manual handling of sample groups                   |\n+-------------------------+------------------------------------------------------------+\n| **Reproducibility**     | Ensures the same logic applies every time                  |\n+-------------------------+------------------------------------------------------------+\n| **Compatibility**       | Lets the pipeline work across diverse experimental designs |\n+-------------------------+------------------------------------------------------------+\n| **Quality control**     | Prevents broken analyses due to misannotated samples       |\n+-------------------------+------------------------------------------------------------+\n\n------------------------------------------------------------------------\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":true,"css":["styles.css"],"output-file":"mapping.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":"cerulean","title":"Preprocessing Modules"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}