{"title":"🐳 Running Pipeline2 with Docker","markdown":{"yaml":{"title":"🐳 Running Pipeline2 with Docker"},"headingText":"👷‍️⛏️ 1. Build the Docker Image","containsRefs":false,"markdown":"\n\n------------------------------------------------------------------------\n\n\nFrom the folder containing `Dockerfile.pipeline2`, run:\n\n``` bash\ndocker build -f Dockerfile.pipeline2 -t pipeline2-image .\n```\n\n-   `-f`: specifies the Dockerfile to use.\n-   `-t`: tags the image name as `pipeline2-image`.\n-   `.`: tells Docker to build using the current directory context.\n\n------------------------------------------------------------------------\n\n### 📁 2. Project Structure\n\nA typical folder layout:\n\n```         \nyour_project/\n├── run_pipeline2.sh\n├── modules/\n│   └── pipeline2/\n├── metadata/\n├── Reference/\n├── templates/\n├── logs/\n├── analysis/           # Will be populated by the pipeline\n```\n\nEnsure all these folders exist, especially `Reference/`, `metadata/`, and `modules/`.\n\n------------------------------------------------------------------------\n\n### 🗃️ 3. Mounting Folders\n\nTo give Docker access to your files, bind-mount these folders:\n\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| Host Path                                                                           | Docker Path            | Reason                              |\n+=====================================================================================+========================+=====================================+\n| `$PWD`                                                                              | `/pipeline2`           | Root of your pipeline package       |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/Reference`                                                                    | `/pipeline2/Reference` | Genome files (FASTA, GTF, BED)      |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/metadata`                                                                     | `/pipeline2/metadata`  | Sample metadata for input           |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/templates`                                                                    | `/pipeline2/templates` | Mapping schema, rules               |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/logs`                                                                         | `/pipeline2/logs`      | Store logs                          |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/analysis`                                                                     | `/pipeline2/analysis`  | All analysis results are saved here |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/assets`                                                                       | `/pipeline2/assets`    | Contains images icon for the IDR    |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n|                                                                                     |                        | report. Can be changed by user      |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| ----------------------------------------------------------------------------------- |                        |                                     |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n\n### 🏃 4. Run the Pipeline\n\nExample command:\n\n``` bash\ndocker run --rm \\\n  -v \"$PWD:/pipeline2\" \\\n  -v \"$PWD/Reference:/pipeline2/Reference\" \\\n  -v \"$PWD/metadata:/pipeline2/metadata\" \\\n  -v \"$PWD/templates:/pipeline2/templates\" \\\n  -v \"$PWD/logs:/pipeline2/logs\" \\\n  -v \"$PWD/analysis:/pipeline2/analysis\" \\\n  -w /pipeline2 \\\n  pipeline2-image \\\n  bash run_pipeline2.sh --caller macs3 -genome mm10\n```\n\n------------------------------------------------------------------------\n\n### 📦 5. Output Files\n\nAfter running, the results will be in:\n\n-   `analysis/` — contains pipeline outputs and QC summaries\n-   `logs/` — contains module-specific logs\n-   `metadata/mapping_filtered_IDR.tsv` — filtered metadata after validation\n\n------------------------------------------------------------------------\n\n### 🛠️️️ 6. Optional: Helper Shell Script\n\nCreate a script like `run.sh`:\n\n``` bash\n#!/bin/bash\ndocker run --rm \\\n  -v \"$PWD:/pipeline2\" \\\n  -v \"$PWD/Reference:/pipeline2/Reference\" \\\n  -v \"$PWD/metadata:/pipeline2/metadata\" \\\n  -v \"$PWD/templates:/pipeline2/templates\" \\\n  -v \"$PWD/logs:/pipeline2/logs\" \\\n  -v \"$PWD/analysis:/pipeline2/analysis\" \\\n  -w /pipeline2 \\\n  pipeline2-image \\\n  bash run_pipeline2.sh \"$@\"\n```\n\nThen run it like this:\n\n``` bash\nchmod +x run.sh\n./run.sh --caller homer -genome mm10\n```\n\n","srcMarkdownNoYaml":"\n\n------------------------------------------------------------------------\n\n### 👷‍️⛏️ 1. Build the Docker Image\n\nFrom the folder containing `Dockerfile.pipeline2`, run:\n\n``` bash\ndocker build -f Dockerfile.pipeline2 -t pipeline2-image .\n```\n\n-   `-f`: specifies the Dockerfile to use.\n-   `-t`: tags the image name as `pipeline2-image`.\n-   `.`: tells Docker to build using the current directory context.\n\n------------------------------------------------------------------------\n\n### 📁 2. Project Structure\n\nA typical folder layout:\n\n```         \nyour_project/\n├── run_pipeline2.sh\n├── modules/\n│   └── pipeline2/\n├── metadata/\n├── Reference/\n├── templates/\n├── logs/\n├── analysis/           # Will be populated by the pipeline\n```\n\nEnsure all these folders exist, especially `Reference/`, `metadata/`, and `modules/`.\n\n------------------------------------------------------------------------\n\n### 🗃️ 3. Mounting Folders\n\nTo give Docker access to your files, bind-mount these folders:\n\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| Host Path                                                                           | Docker Path            | Reason                              |\n+=====================================================================================+========================+=====================================+\n| `$PWD`                                                                              | `/pipeline2`           | Root of your pipeline package       |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/Reference`                                                                    | `/pipeline2/Reference` | Genome files (FASTA, GTF, BED)      |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/metadata`                                                                     | `/pipeline2/metadata`  | Sample metadata for input           |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/templates`                                                                    | `/pipeline2/templates` | Mapping schema, rules               |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/logs`                                                                         | `/pipeline2/logs`      | Store logs                          |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/analysis`                                                                     | `/pipeline2/analysis`  | All analysis results are saved here |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| `$PWD/assets`                                                                       | `/pipeline2/assets`    | Contains images icon for the IDR    |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n|                                                                                     |                        | report. Can be changed by user      |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n| ----------------------------------------------------------------------------------- |                        |                                     |\n+-------------------------------------------------------------------------------------+------------------------+-------------------------------------+\n\n### 🏃 4. Run the Pipeline\n\nExample command:\n\n``` bash\ndocker run --rm \\\n  -v \"$PWD:/pipeline2\" \\\n  -v \"$PWD/Reference:/pipeline2/Reference\" \\\n  -v \"$PWD/metadata:/pipeline2/metadata\" \\\n  -v \"$PWD/templates:/pipeline2/templates\" \\\n  -v \"$PWD/logs:/pipeline2/logs\" \\\n  -v \"$PWD/analysis:/pipeline2/analysis\" \\\n  -w /pipeline2 \\\n  pipeline2-image \\\n  bash run_pipeline2.sh --caller macs3 -genome mm10\n```\n\n------------------------------------------------------------------------\n\n### 📦 5. Output Files\n\nAfter running, the results will be in:\n\n-   `analysis/` — contains pipeline outputs and QC summaries\n-   `logs/` — contains module-specific logs\n-   `metadata/mapping_filtered_IDR.tsv` — filtered metadata after validation\n\n------------------------------------------------------------------------\n\n### 🛠️️️ 6. Optional: Helper Shell Script\n\nCreate a script like `run.sh`:\n\n``` bash\n#!/bin/bash\ndocker run --rm \\\n  -v \"$PWD:/pipeline2\" \\\n  -v \"$PWD/Reference:/pipeline2/Reference\" \\\n  -v \"$PWD/metadata:/pipeline2/metadata\" \\\n  -v \"$PWD/templates:/pipeline2/templates\" \\\n  -v \"$PWD/logs:/pipeline2/logs\" \\\n  -v \"$PWD/analysis:/pipeline2/analysis\" \\\n  -w /pipeline2 \\\n  pipeline2-image \\\n  bash run_pipeline2.sh \"$@\"\n```\n\nThen run it like this:\n\n``` bash\nchmod +x run.sh\n./run.sh --caller homer -genome mm10\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":true,"css":["../styles.css"],"output-file":"docker_pipeline2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":"cerulean","title":"🐳 Running Pipeline2 with Docker"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}