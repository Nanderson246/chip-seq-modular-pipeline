---
title: "🔄 Pipeline 1: QC & Preprocessing Modules"
---

## 🔄 Pipeline 1: QC & Preprocessing Modules

## 🧬 Supported Data Types

This pipeline is designed for **ChIP-seq** and **ATAC-seq** data preprocessing. It includes:

-   Adapter trimming (`cutadapt`)
-   Parallel quality control (`FastQC`)
-   Optional spike-in filtering
-   Mitochondrial read removal
-   Blacklist region filtering (ENCODE)
-   Clean alignment with BWA and BAM post-processing

By supporting these steps, the pipeline ensures high-quality, reproducible inputs for downstream peak calling or chromatin accessibility analysis.

> 🔁 While optimized for ChIP-seq, the pipeline is fully compatible with ATAC-seq experiments.



Scripts: `01_init_directories.sh` to `11_Renaming_bam.sh`

``` bash
modules/pipeline1\$ tree . 
├── 01_init_directories.sh 
├── 02_reference_check.sh 
├── 03_input_fetch.sh 
├── 04_fastqc_parallel.sh 
├── 05_05_Cutadapt_trimming_phix_parallel.sh 
├── 06_fastqc_trimmed_parallel.sh 
├── 07_spike_detect.sh 
├── 08_alignment_bwa_spike.sh 
├── 09_readgroups_add.sh 
├── 10_bam_cleaning.sh 
├── 10_plot_spike_qc_summary.R 
└── 11_Renaming_bam.sh
```
Great structure! Given the flow of your Quarto document, the best place to add the **usage documentation** for `run_pipeline1.sh` would be **after** the `## 🧬 Supported Data Types` section and **before** the `### 🔧 Modules` section.

This keeps your document logically organized:

1. **Intro**
2. **What data it supports**
3. **How to run it (Usage) ✅**
4. **What each module does**
5. **What the outputs are**

---

### ✅ Suggested Update (add this block in your `.qmd` file):

````markdown
### 🚀 Usage: `run_pipeline1.sh`

This script is the entry point for Pipeline 1 and supports both default and customized executions.

#### ✅ Default Run

Run with all defaults:
```bash
bash run_pipeline1.sh
````

This uses:

* `THREADS = 4`
* `REFERENCE = hg38`
* `ADAPTER = tn5_truseq`
* `PLATFORM = ILLUMINA`
* `MAPPING = metadata/mapping.tsv`
* `REPORT_FORMAT = human`

#### 🔧 Full Custom Run

Example of overriding all defaults:

```bash
bash run_pipeline1.sh -t 8 -r mm10 -a tn5_nextera -p IONTORRENT -m data/sample_metadata.tsv -f csv
```

Overrides:

* `-t 8`: 8 threads
* `-r mm10`: mouse genome
* `-a tn5_nextera`: alternative adapter
* `-p IONTORRENT`: sequencing platform
* `-m data/sample_metadata.tsv`: custom mapping file
* `-f csv`: report format

#### ℹ️ Help

For option details:

```bash
bash run_pipeline1.sh --help
```


### 🔧 Modules

```{r, echo=FALSE,  results='asis'}
library(knitr)
library(kableExtra)
library(magrittr)
modules <- data.frame(
  Script = c(
    "01_init_directories.sh",
    "02_reference_check.sh",
    "03_input_fetch.sh",
    "04_fastqc_parallel.sh",
    "05_Cutadapt_trimming_phix_parallel.sh",
    "06_fastqc_trimmed_parallel.sh",
    "07_spike_detect.sh",
    "08_alignment_bwa_spike.sh",
    "09_readgroups_add.sh",
    "10_bam_cleaning.sh",
    "11_Renaming_bam.sh"
  ),
  Purpose = c(
    "Creates necessary directory structure.",
    "Validates presence of genome reference files.",
    "Fetches and decompresses user-supplied FASTQ files.",
    "Runs FastQC and generates quality reports.",
    "Trims adapters and low-quality bases using Cutadapt.",
    "Runs FastQC on trimmed reads.",
    "Detects exogenous spike-in if not provided.",
    "Aligns reads using BWA and checks spike content.",
    "Adds read group metadata using Picard.",
    "Cleans and indexes BAMs; performs spike-in QC.",
    "Renames BAMs using mapping.tsv for grouping."
  )
)

table<- kable(modules, 
      format = "markdown",
      caption = "<strong>🔧 Modules Overview</strong>",
      align = c("l", "l")) %>%
  kable_styling(bootstrap_options = c("striped", "hover"),    full_width = FALSE)
table

```

### 📁 Output Folders

results/: Raw outputs and intermediate files.

analysis/Renamed_Cleaned: Cleaned and filtered BAMs for downstream usage.

results/

``` bash
results/Filtered$ tree 

├── BAM}
├── Filtered
├        ├── Cleaned  ✅ here are the cleaned BAM that will be renamed. │
├        ├── Deduplicated
├        └── Metrics
├── QC_fastqc
├── QC_spike_plots
├── QC_trimmed_fastqc
├── spike_analysis
└── Trimmed
```

------------------------------------------------------------------------

